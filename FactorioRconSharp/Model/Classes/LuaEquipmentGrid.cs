#pragma warning disable CS8618
// ReSharper disable UnassignedGetOnlyAutoProperty

using FactorioRconSharp.Core.Abstractions;
using FactorioRconSharp.Model.Utils;
using FactorioRconSharp.Model.Builtins;
using FactorioRconSharp.Model.Concepts;
using FactorioRconSharp.Model.Definitions;
using OneOf;

namespace FactorioRconSharp.Model.Classes;

/// <summary>
/// An equipment grid is for example the inside of a power armor.
/// </summary>
[FactorioRconClass("LuaEquipmentGrid")]
public class LuaEquipmentGrid
{
  [FactorioRconAttribute("prototype")]
  public LuaEquipmentGridPrototype Prototype { get; private set; }

  /// <summary>
  /// Width of the equipment grid.
  /// </summary>
  [FactorioRconAttribute("width")]
  public uint Width { get; private set; }

  /// <summary>
  /// Height of the equipment grid.
  /// </summary>
  [FactorioRconAttribute("height")]
  public uint Height { get; private set; }

  /// <summary>
  /// All the equipment in this grid.
  /// </summary>
  [FactorioRconAttribute("equipment")]
  public LuaEquipment[] Equipment { get; private set; }

  /// <summary>
  /// Total energy per tick generated by the equipment inside this grid.
  /// </summary>
  [FactorioRconAttribute("generator_energy")]
  public double GeneratorEnergy { get; private set; }

  /// <summary>
  /// Maximum energy per tick that can be created by any solar panels in the equipment grid. Actual generated energy varies depending on the daylight levels.
  /// </summary>
  [FactorioRconAttribute("max_solar_energy")]
  public double MaxSolarEnergy { get; private set; }

  /// <summary>
  /// The total energy stored in all batteries in the equipment grid.
  /// </summary>
  [FactorioRconAttribute("available_in_batteries")]
  public double AvailableInBatteries { get; private set; }

  /// <summary>
  /// Total energy storage capacity of all batteries in the equipment grid.
  /// </summary>
  [FactorioRconAttribute("battery_capacity")]
  public double BatteryCapacity { get; private set; }

  /// <summary>
  /// The amount of shields this equipment grid has.
  /// </summary>
  [FactorioRconAttribute("shield")]
  public float Shield { get; private set; }

  /// <summary>
  /// The maximum amount of shields this equipment grid has.
  /// </summary>
  [FactorioRconAttribute("max_shield")]
  public float MaxShield { get; private set; }

  /// <summary>
  /// Whether this grid's equipment movement bonus is active.
  /// </summary>
  [FactorioRconAttribute("inhibit_movement_bonus")]
  public bool InhibitMovementBonus { get; set; }

  /// <summary>
  /// Unique identifier of this equipment grid.
  /// </summary>
  [FactorioRconAttribute("unique_id")]
  public uint UniqueId { get; private set; }

  /// <summary>
  /// Is this object valid? This Lua object holds a reference to an object within the game engine. It is possible that the game-engine object is removed whilst a mod still holds the corresponding Lua object. If that happens, the object becomes invalid, i.e. this attribute will be `false`. Mods are advised to check for object validity if any change to the game state might have occurred between the creation of the Lua object and its access.
  /// </summary>
  [FactorioRconAttribute("valid")]
  public bool Valid { get; private set; }

  /// <summary>
  /// The class name of this object. Available even when `valid` is false. For LuaStruct objects it may also be suffixed with a dotted path to a member of the struct.
  /// </summary>
  [FactorioRconAttribute("object_name")]
  public string ObjectName { get; private set; }

  /// <summary>
  /// Remove an equipment from the grid.
  /// </summary>
  /// <param name="position">Lua name: position</param>
  /// <param name="equipment">Lua name: equipment</param>
  /// <param name="byPlayer">Lua name: by_player</param>
  [FactorioRconMethod("take")]
  public SimpleItemStack? Take(EquipmentPosition? position = null, LuaEquipment? equipment = null, PlayerIdentification? byPlayer = null) => throw FactorioModelUtils.UseClientReadAsyncMethod();

  /// <summary>
  /// Remove all equipment from the grid.
  /// </summary>
  /// <param name="byPlayer">Lua name: by_player</param>
  [FactorioRconMethod("take_all")]
  public Dictionary<string, uint> TakeAll(PlayerIdentification? byPlayer = null) => throw FactorioModelUtils.UseClientReadAsyncMethod();

  /// <summary>
  /// Clear all equipment from the grid, removing it without actually returning it.
  /// </summary>
  /// <param name="byPlayer">Lua name: by_player</param>
  [FactorioRconMethod("clear")]
  public void Clear(PlayerIdentification? byPlayer = null) => throw FactorioModelUtils.UseClientExecuteAsyncMethod();

  /// <summary>
  /// Insert an equipment into the grid.
  /// </summary>
  /// <param name="name">Lua name: name</param>
  /// <param name="position">Lua name: position</param>
  /// <param name="byPlayer">Lua name: by_player</param>
  [FactorioRconMethod("put")]
  public LuaEquipment? Put(string name, EquipmentPosition? position = null, PlayerIdentification? byPlayer = null) => throw FactorioModelUtils.UseClientReadAsyncMethod();

  /// <summary>
  /// Check whether moving an equipment would succeed.
  /// </summary>
  /// <param name="equipment">Lua name: equipment</param>
  /// <param name="position">Lua name: position</param>
  [FactorioRconMethod("can_move")]
  public bool CanMove(LuaEquipment equipment, EquipmentPosition position) => throw FactorioModelUtils.UseClientReadAsyncMethod();

  /// <summary>
  /// Move an equipment within this grid.
  /// </summary>
  /// <param name="equipment">Lua name: equipment</param>
  /// <param name="position">Lua name: position</param>
  [FactorioRconMethod("move")]
  public bool Move(LuaEquipment equipment, EquipmentPosition position) => throw FactorioModelUtils.UseClientReadAsyncMethod();

  /// <summary>
  /// Find equipment in the Equipment Grid based off a position.
  /// </summary>
  /// <param name="position">Lua name: position</param>
  [FactorioRconMethod("get")]
  public LuaEquipment? Get(EquipmentPosition position) => throw FactorioModelUtils.UseClientReadAsyncMethod();

  /// <summary>
  /// Get counts of all equipment in this grid.
  /// </summary>
  [FactorioRconMethod("get_contents")]
  public Dictionary<string, uint> GetContents() => throw FactorioModelUtils.UseClientReadAsyncMethod();

  /// <summary>
  /// Find equipment by name.
  /// </summary>
  /// <param name="equipment">Lua name: equipment</param>
  [FactorioRconMethod("find")]
  public LuaEquipment? Find(string equipment) => throw FactorioModelUtils.UseClientReadAsyncMethod();

  /// <summary>
  /// Get the number of all or some equipment in this grid.
  /// </summary>
  /// <param name="equipment">Lua name: equipment</param>
  [FactorioRconMethod("count")]
  public uint Count(string? equipment = null) => throw FactorioModelUtils.UseClientReadAsyncMethod();

  /// <summary>
  /// All methods and properties that this object supports.
  /// </summary>
  [FactorioRconMethod("help")]
  public string Help() => throw FactorioModelUtils.UseClientReadAsyncMethod();

}

